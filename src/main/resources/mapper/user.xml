<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.banjjak.user.model.mapper.UserMapper">

    <resultMap type="userDto" id="user" >
        <result column="user_id" property="userId"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="name" property="name"/>
        <result column="region" property="region"/>
        <result column="refresh_token" property="refreshToken"/>
        <result column="create_date" property="createDate"/>
    </resultMap>

    <select id="findAll" resultType="list" resultMap="user">
        SELECT *
        FROM user
    </select>

    <select id="findByUsername" parameterType="string" resultMap="user">
        SELECT *
        FROM user
        WHERE username = #{username}
    </select>

    <select id="findById" parameterType="long" resultMap="user">
        SELECT *
        FROM user
        WHERE user_id = #{userId}
    </select>

    <insert id="save" parameterType="userDto">
        INSERT INTO user (username, password, nickname,  name, region,create_date)
        VALUES (#{username}, #{password}, #{nickname}, #{name}, #{region} , NOW())
    </insert>

    <update id="update" parameterType="userDto">
        UPDATE user
        SET username = #{username},
            password = #{password},
            nickname = #{nickname},
            name = #{name},
            region = #{region}
        WHERE user_id = #{userId}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM user
        WHERE user_id = #{userId}
    </delete>

    <select id="login" parameterType="userDto" resultMap="user">
        SELECT user_id, username, password, nickname, name, region, create_date
        FROM user
        WHERE username = #{username} AND password = #{password}
    </select>

    <update id="saveRefreshToken" parameterType="map">
        UPDATE user
        SET refresh_token = #{token}
        WHERE user_id = #{userId}
    </update>

    <select id="getRefreshToken" parameterType="long">
        SELECT refresh_token
        FROM user
        WHERE user_id = #{userId}
    </select>

    <update id="deleteRefreshToken" parameterType="map">
        UPDATE user
        SET refresh_token = #{token}
        WHERE user_id = #{userId}
    </update>



</mapper>